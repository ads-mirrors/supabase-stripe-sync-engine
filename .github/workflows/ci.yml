name: CI

on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    name: Test / OS ${{ matrix.platform }} / Node ${{ matrix.node }}
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-18.04]
        node: ['12']

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Set up .env file
        run: |
          touch .env
          echo DATABASE_URL='postgres://postgres:postgres@127.0.0.1:55432/postgres?sslmode=disable&search_path=stripe' >> .env
          echo NODE_ENV=dev >> .env
          echo STRIPE_SECRET_KEY=sk_test_ >> .env
          echo STRIPE_WEBHOOK_SECRET=whsec_ >> .env
          echo SCHEMA=stripe >> .env
          echo PORT=8080 >> .env

      - name: Install dependencies
        run: |
          npm ci

      - name: Prettier checks
        run: |
          npm run prettier:check

      - name: ESLint checks
        run: |
          npm run eslint:check

      - name: Builds successfully
        run: |
          npm run build

      - name: Tests
        run: |
          docker-compose -f ./docker/compose.yml up -d
          npm run test
